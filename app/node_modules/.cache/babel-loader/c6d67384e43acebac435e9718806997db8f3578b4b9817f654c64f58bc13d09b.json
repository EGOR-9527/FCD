{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\fcdTodoList\\\\app\\\\src\\\\widgets\\\\ui\\\\Selected.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useTodos } from '../../shared/hooks/index';\nimport { api } from '../../shared/api/todos';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Selected = () => {\n  _s();\n  const {\n    toggleTodo,\n    deleteTodo\n  } = useTodos(); // Вызов хука\n  const [selectedTodos, setSelectedTodos] = useState([]); // Состояние для хранения выбранных задач\n\n  const fetchTodos = async () => {\n    try {\n      const response = await api.getSelected();\n      setSelectedTodos(response || []); // Сохраняем полученные задачи в состоянии, если response не определен, устанавливаем пустой массив\n    } catch (error) {\n      console.error('Ошибка при получении списка todos:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTodos();\n  }, []); // Запускаем только один раз при монтировании компонента\n\n  const handleDelete = async id => {\n    try {\n      await api.deleteTodo(id); // Удаляем задачу через API\n      deleteTodo(id); // Удаляем задачу из локального состояния\n      setSelectedTodos(prev => prev.filter(todo => todo.id !== id)); // Обновляем состояние, удаляя задачу\n    } catch (error) {\n      console.error(\"Ошибка при удалении задачи:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Array.isArray(selectedTodos) && selectedTodos.length > 0 ? selectedTodos.map(todo => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Cart\",\n        style: {\n          background: \"green\",\n          color: \"white\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"CartInput\",\n          type: \"checkbox\",\n          checked: todo.completed,\n          onChange: () => toggleTodo(todo.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"CartTitle\",\n          children: todo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"CartButton\",\n          onClick: () => handleDelete(todo.id),\n          children: \"\\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u041D\\u0435\\u0442 \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0437\\u0430\\u0434\\u0430\\u0447.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this) // Сообщение, если нет задач\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(Selected, \"lBFKLKn001aLk+lr8qE02GzYxA4=\", false, function () {\n  return [useTodos];\n});\n_c = Selected;\nvar _c;\n$RefreshReg$(_c, \"Selected\");","map":{"version":3,"names":["React","useEffect","useState","useTodos","api","jsxDEV","_jsxDEV","Selected","_s","toggleTodo","deleteTodo","selectedTodos","setSelectedTodos","fetchTodos","response","getSelected","error","console","handleDelete","id","prev","filter","todo","children","Array","isArray","length","map","className","style","background","color","type","checked","completed","onChange","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/fcdTodoList/app/src/widgets/ui/Selected.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useTodos } from '../../shared/hooks/index';\r\nimport { api } from '../../shared/api/todos';\r\n\r\nexport const Selected: React.FC = () => {\r\n    const { toggleTodo, deleteTodo } = useTodos(); // Вызов хука\r\n    const [selectedTodos, setSelectedTodos] = useState<any[]>([]); // Состояние для хранения выбранных задач\r\n\r\n    const fetchTodos = async () => {\r\n        try {\r\n            const response = await api.getSelected();\r\n            setSelectedTodos(response || []); // Сохраняем полученные задачи в состоянии, если response не определен, устанавливаем пустой массив\r\n        } catch (error) {\r\n            console.error('Ошибка при получении списка todos:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchTodos();\r\n    }, []); // Запускаем только один раз при монтировании компонента\r\n\r\n    const handleDelete = async (id: string) => {\r\n        try {\r\n            await api.deleteTodo(id); // Удаляем задачу через API\r\n            deleteTodo(id); // Удаляем задачу из локального состояния\r\n            setSelectedTodos((prev) => prev.filter(todo => todo.id !== id)); // Обновляем состояние, удаляя задачу\r\n        } catch (error) {\r\n            console.error(\"Ошибка при удалении задачи:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {Array.isArray(selectedTodos) && selectedTodos.length > 0 ? (\r\n                selectedTodos.map((todo) => {\r\n                    return (\r\n                        <div\r\n                            className=\"Cart\"\r\n                            style={{ background: \"green\", color: \"white\" }}\r\n                            key={todo.id} // Используйте уникальный идентификатор todo.id в качестве ключа\r\n                        >\r\n                            <input\r\n                                className=\"CartInput\"\r\n                                type=\"checkbox\"\r\n                                checked={todo.completed}\r\n                                onChange={() => toggleTodo(todo.id)}\r\n                            />\r\n                            <h2 className=\"CartTitle\">{todo.title}</h2>\r\n                            <button className=\"CartButton\" onClick={() => handleDelete(todo.id)}>удалить</button>\r\n                        </div>\r\n                    );\r\n                })\r\n            ) : (\r\n                <p>Нет выбранных задач.</p> // Сообщение, если нет задач\r\n            )}\r\n        </div>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}