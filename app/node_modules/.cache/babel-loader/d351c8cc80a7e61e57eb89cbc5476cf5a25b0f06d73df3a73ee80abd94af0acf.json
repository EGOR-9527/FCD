{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\fcdTodoList\\\\app\\\\src\\\\widgets\\\\todoList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Api } from \"../shared/queriesClient\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TodoList = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [editingTodoId, setEditingTodoId] = useState(null);\n  const [editingTitle, setEditingTitle] = useState('');\n  const getTodos = async () => {\n    const response = await Api.getTodos();\n    const newTodos = response.filter(data => !data.completed) // Фильтруем только невыполненные задачи\n    .map(data => ({\n      id: data.id,\n      title: data.title,\n      description: data.description,\n      completed: data.completed\n    }));\n    setTodos(newTodos);\n  };\n  useEffect(() => {\n    getTodos();\n  }, []);\n  const createTodo = async title => {\n    try {\n      const response = await Api.createTodo(title);\n      if (response.id) {\n        const newTodo = {\n          id: response.id,\n          title,\n          description: '',\n          completed: false\n        };\n        setTodos([...todos, newTodo]);\n      }\n    } catch (error) {\n      console.error(\"Ошибка при создании задачи:\", error);\n    }\n  };\n  const updateTodo = async (id, title) => {\n    const response = await Api.updateTodo(id, title);\n    if (response) {\n      const updatedTodos = todos.map(todo => todo.id === id ? {\n        ...todo,\n        title\n      } : todo);\n      setTodos(updatedTodos);\n      setEditingTodoId(null);\n      setEditingTitle('');\n    }\n  };\n  const completedTodo = async id => {\n    const response = await Api.completedTodo(id);\n    if (response) {\n      const updatedTodos = todos.map(todo => todo.id === id ? {\n        ...todo,\n        completed: !todo.completed\n      } : todo);\n      setTodos(updatedTodos);\n    }\n  };\n  const deleteTodo = async id => {\n    const response = await Api.deleteTodo(id);\n    if (response) {\n      setTodos(todos.filter(todo => todo.id !== id));\n    }\n  };\n  const handleEditClick = todo => {\n    setEditingTodoId(todo.id);\n    setEditingTitle(todo.title);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\",\n      onKeyDown: e => {\n        if (e.key === 'Enter') {\n          createTodo(e.target.value);\n          e.target.value = '';\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => createTodo(document.querySelector('input[type=\"text\"]').value),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: todo.completed,\n          onChange: () => completedTodo(todo.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), editingTodoId === todo.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editingTitle,\n            onChange: e => setEditingTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updateTodo(todo.id, editingTitle),\n            children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEditClick(todo),\n            children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: todo.completed ? 'Выполнено' : 'Невыполнено'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTodo(todo.id),\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoList, \"6lwKD10Fj61hJwj3bH/IjoM4pDY=\");\n_c = TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","Api","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoList","_s","todos","setTodos","editingTodoId","setEditingTodoId","editingTitle","setEditingTitle","getTodos","response","newTodos","filter","data","completed","map","id","title","description","createTodo","newTodo","error","console","updateTodo","updatedTodos","todo","completedTodo","deleteTodo","handleEditClick","children","type","placeholder","onKeyDown","e","key","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","document","querySelector","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/fcdTodoList/app/src/widgets/todoList.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Api } from \"../shared/queriesClient\";\r\n\r\ninterface Todo {\r\n    id: string;\r\n    title: string;\r\n    description: string;\r\n    completed: boolean;\r\n}\r\n\r\nexport const TodoList: React.FC = () => {\r\n    const [todos, setTodos] = useState<Todo[]>([]);\r\n    const [editingTodoId, setEditingTodoId] = useState<string | null>(null);\r\n    const [editingTitle, setEditingTitle] = useState<string>('');\r\n\r\n    const getTodos = async () => {\r\n        const response = await Api.getTodos();\r\n        const newTodos = response\r\n            .filter((data: Todo) => !data.completed) // Фильтруем только невыполненные задачи\r\n            .map((data: Todo) => ({\r\n                id: data.id,\r\n                title: data.title,\r\n                description: data.description,\r\n                completed: data.completed,\r\n            }));\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getTodos();\r\n    }, []);\r\n\r\n    const createTodo = async (title: string) => {\r\n        try {\r\n            const response = await Api.createTodo(title);\r\n            if (response.id) {\r\n                const newTodo = {\r\n                    id: response.id,\r\n                    title,\r\n                    description: '',\r\n                    completed: false,\r\n                };\r\n                setTodos([...todos, newTodo]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Ошибка при создании задачи:\", error);\r\n        }\r\n    };\r\n\r\n    const updateTodo = async (id: string, title: string) => {\r\n        const response = await Api.updateTodo(id, title);\r\n        if (response) {\r\n            const updatedTodos = todos.map(todo => todo.id === id ? { ...todo, title } : todo);\r\n            setTodos(updatedTodos);\r\n            setEditingTodoId(null);\r\n            setEditingTitle('');\r\n        }\r\n    };\r\n\r\n    const completedTodo = async (id: string) => {\r\n        const response = await Api.completedTodo(id);\r\n        if (response) {\r\n            const updatedTodos = todos.map(todo => todo.id === id ? { ...todo, completed: !todo.completed } : todo);\r\n            setTodos(updatedTodos);\r\n        }\r\n    };\r\n\r\n    const deleteTodo = async (id: string) => {\r\n        const response = await Api.deleteTodo(id);\r\n        if (response) {\r\n            setTodos(todos.filter(todo => todo.id !== id));\r\n        }\r\n    };\r\n\r\n    const handleEditClick = (todo: Todo) => {\r\n        setEditingTodoId(todo.id);\r\n        setEditingTitle(todo.title);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Введите задачу\"\r\n                onKeyDown={(e) => {\r\n                    if (e.key === 'Enter') {\r\n                        createTodo((e.target as HTMLInputElement).value);\r\n                        (e.target as HTMLInputElement).value = '';\r\n                    }\r\n                }}\r\n            />\r\n            <button onClick={() => createTodo((document.querySelector('input[type=\"text\"]') as HTMLInputElement).value)}>+</button>\r\n            <ul>\r\n                {todos.map(todo => (\r\n                    <li key={todo.id}>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={todo.completed}\r\n                            onChange={() => completedTodo(todo.id)}\r\n                        />\r\n                        {editingTodoId === todo.id ? (\r\n                            <>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={editingTitle}\r\n                                    onChange={(e) => setEditingTitle(e.target.value)}\r\n                                />\r\n                                <button onClick={() => updateTodo(todo.id, editingTitle)}>Сохранить</button>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <span>{todo.title}</span>\r\n                                <button onClick={() => handleEditClick(todo)}>Редактировать</button>\r\n                            </>\r\n                        )}\r\n                        <p>{todo.completed ? 'Выполнено' : 'Невыполнено'}</p>\r\n                        <button onClick={() => deleteTodo(todo.id)}>Удалить</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}