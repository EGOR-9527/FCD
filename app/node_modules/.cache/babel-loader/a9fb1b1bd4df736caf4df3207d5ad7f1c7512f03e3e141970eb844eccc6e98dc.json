{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\fcdTodoList\\\\app\\\\src\\\\widgets\\\\ui\\\\Cart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useTodos } from \"../../shared/hooks/index\";\nimport { api } from \"../../shared/api/todos/index\"; // Импортируем api\nimport { v4 as uuidv4 } from 'uuid'; // Импортируем библиотеку для генерации уникальных ID\nimport \"../../style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoApp = () => {\n  _s();\n  const {\n    todos,\n    addTodo,\n    deleteTodo,\n    toggleTodo\n  } = useTodos(); // Вызов хука\n  const [text, setText] = useState(\"\"); // Используем строку для состояния\n\n  // Функция для получения задач\n  const fetchTodos = async () => {\n    try {\n      if (!api) {\n        throw new Error(\"Api не существует\");\n      }\n      const response = await api.getTodos();\n      if (!Array.isArray(response)) {\n        throw new Error(\"Ответ не является массивом\");\n      }\n      console.log(\"response: \", response);\n    } catch (error) {\n      console.error(\"Ошибка при получении задач:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchTodos();\n    console.log(\"todos: \", todos);\n  }, []); // Запускаем только один раз при монтировании компонента\n\n  const handleAddTodo = async () => {\n    if (text.trim() !== \"\") {\n      const newTodo = {\n        id: uuidv4(),\n        // Генерация уникального строкового ID\n        title: text,\n        completed: false\n      };\n      try {\n        await api.postCreateTodo(newTodo); // Отправляем новую задачу на сервер\n        addTodo(newTodo.id, newTodo.title, newTodo.completed); // Добавляем задачу в локальное состояние\n        setText(\"\"); // Очищаем поле ввода после добавления\n      } catch (error) {\n        console.error(\" Ошибка при добавлении задачи:\", error);\n      }\n    }\n  };\n  const handleDelete = async id => {\n    // id остается строкой\n    try {\n      await api.deleteTodo(id); // Убедитесь, что id - это строка\n      deleteTodo(id);\n    } catch (error) {\n      console.error(\"Ошибка при удалении задачи: \", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoApp\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerAdd\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"AddInput\",\n        type: \"text\",\n        value: text,\n        onChange: event => setText(event.target.value) // Устанавливаем текст\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"AddButton\",\n        onClick: handleAddTodo,\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: todos.map(todo => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Cart\",\n          style: todo.completed ? {\n            background: \"green\",\n            color: \"white\"\n          } : {},\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"CartInput\",\n            type: \"checkbox\",\n            checked: todo.completed,\n            onChange: () => toggleTodo(todo.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"CartTitle\",\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"CartButton\",\n            onClick: () => handleDelete(todo.id),\n            children: \"\\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoApp, \"bFugj49Sw6MjxuE12IeYMqINPdk=\", false, function () {\n  return [useTodos];\n});\n_c = TodoApp;\nvar _c;\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"names":["React","useState","useEffect","useTodos","api","v4","uuidv4","jsxDEV","_jsxDEV","TodoApp","_s","todos","addTodo","deleteTodo","toggleTodo","text","setText","fetchTodos","Error","response","getTodos","Array","isArray","console","log","error","handleAddTodo","trim","newTodo","id","title","completed","postCreateTodo","handleDelete","className","children","type","value","onChange","event","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","todo","style","background","color","checked","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/fcdTodoList/app/src/widgets/ui/Cart.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useTodos } from \"../../shared/hooks/index\";\r\nimport { api } from \"../../shared/api/todos/index\"; // Импортируем api\r\nimport { v4 as uuidv4 } from 'uuid'; // Импортируем библиотеку для генерации уникальных ID\r\nimport \"../../style.css\";\r\n\r\nexport const TodoApp: React.FC = () => {\r\n    const { todos, addTodo, deleteTodo, toggleTodo } = useTodos(); // Вызов хука\r\n    const [text, setText] = useState<string>(\"\"); // Используем строку для состояния\r\n\r\n    // Функция для получения задач\r\n    const fetchTodos = async () => {\r\n        try {\r\n            if (!api) {\r\n                throw new Error(\"Api не существует\");\r\n            }\r\n            const response = await api.getTodos();\r\n            if (!Array.isArray(response)) {\r\n                throw new Error(\"Ответ не является массивом\");\r\n            }\r\n            console.log(\"response: \", response)\r\n\r\n        } catch (error) {\r\n            console.error(\"Ошибка при получении задач:\", error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchTodos();\r\n        console.log(\"todos: \", todos)\r\n    }, []); // Запускаем только один раз при монтировании компонента\r\n\r\n    const handleAddTodo = async () => {\r\n        if (text.trim() !== \"\") {\r\n            const newTodo = {\r\n                id: uuidv4(), // Генерация уникального строкового ID\r\n                title: text,\r\n                completed: false,\r\n            };\r\n            try {\r\n                await api.postCreateTodo(newTodo); // Отправляем новую задачу на сервер\r\n                addTodo(newTodo.id, newTodo.title, newTodo.completed); // Добавляем задачу в локальное состояние\r\n                setText(\"\"); // Очищаем поле ввода после добавления\r\n            } catch (error) {\r\n                console.error(\" Ошибка при добавлении задачи:\", error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (id: string) => { // id остается строкой\r\n        try {\r\n            await api.deleteTodo(id); // Убедитесь, что id - это строка\r\n            deleteTodo(id);\r\n        } catch (error) {\r\n            console.error(\"Ошибка при удалении задачи: \", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"todoApp\">\r\n            <div className=\"containerAdd\">\r\n                <input\r\n                    className=\"AddInput\"\r\n                    type=\"text\"\r\n                    value={text}\r\n                    onChange={(event) => setText(event.target.value)} // Устанавливаем текст\r\n                />\r\n                <button className=\"AddButton\" onClick={handleAddTodo}>Добавить</button>\r\n            </div>\r\n            <div>\r\n                {todos.map((todo) => {\r\n                    return (\r\n                        <div\r\n                            className=\"Cart\"\r\n                            style={todo.completed ? { background: \"green\", color: \"white\" } : {}}\r\n                            key={todo.id} // Используйте уникальный идентификатор todo.id в качестве ключа\r\n                        >\r\n                            <input\r\n                                className=\"CartInput\"\r\n                                type=\"checkbox\"\r\n                                checked={todo.completed}\r\n                                onChange={() => toggleTodo(todo.id)}\r\n                            />\r\n                            <h2 className=\"CartTitle\">{todo.title}</h2>\r\n                            <button className=\"CartButton\" onClick={() => handleDelete(todo.id)}>удалить</button>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}