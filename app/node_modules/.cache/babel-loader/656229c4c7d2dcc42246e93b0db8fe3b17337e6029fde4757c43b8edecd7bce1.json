{"ast":null,"code":"import axios from 'axios';\nexport const API_URL = 'http://localhost:5000/api/todos/';\nexport const $api = axios.create({\n  baseURL: API_URL,\n  withCredentials: true\n});\nconst handleError = error => {\n  if (error.response) {\n    console.log(\"Ошибка: \", error.response.data);\n  } else {\n    console.log(\"Ошибка сети: \", error.message);\n  }\n};\nexport const api = {\n  getTodos: () => $api.get('getTodos').then(response => response.data).catch(handleError),\n  // Изменено\n  postCreateTodo: (id, data) => $api.post('createTodo', {\n    id: id,\n    data: data\n  }).then(response => response.data).catch(handleError),\n  // Изменено\n  putUpdateTodo: (id, data) => $api.put(`updateTodo/${id}`, data).then(response => response.data).catch(handleError),\n  // Изменено\n  deleteTodo: id => $api.delete(`deleteTodo/${id}`).then(response => response.data).catch(handleError) // Изменено\n};","map":{"version":3,"names":["axios","API_URL","$api","create","baseURL","withCredentials","handleError","error","response","console","log","data","message","api","getTodos","get","then","catch","postCreateTodo","id","post","putUpdateTodo","put","deleteTodo","delete"],"sources":["C:/Users/user/Desktop/fcdTodoList/app/src/shared/api/todos/index.ts"],"sourcesContent":["import { error } from \"console\"\r\nimport axios from 'axios';\r\n\r\nexport const API_URL = 'http://localhost:5000/api/todos/';\r\n\r\nexport const $api = axios.create({\r\n    baseURL: API_URL,\r\n    withCredentials: true,\r\n})\r\n\r\nconst handleError = (error: any) => {\r\n    if(error.response) {\r\n        console.log(\"Ошибка: \", error.response.data)\r\n    } else {\r\n        console.log(\"Ошибка сети: \", error.message)\r\n    }\r\n}\r\n\r\nexport const api = {\r\n    getTodos: () => $api.get('getTodos').then(response => response.data).catch(handleError), // Изменено\r\n    postCreateTodo: (id: string, data: any) => $api.post('createTodo', {id: id, data: data}).then(response => response.data).catch(handleError), // Изменено\r\n    putUpdateTodo: (id: string, data: any) => $api.put(`updateTodo/${id}`, data).then(response => response.data).catch(handleError), // Изменено\r\n    deleteTodo: (id: string) => $api.delete(`deleteTodo/${id}`).then(response => response.data).catch(handleError), // Изменено\r\n};"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,OAAO,GAAG,kCAAkC;AAEzD,OAAO,MAAMC,IAAI,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC7BC,OAAO,EAAEH,OAAO;EAChBI,eAAe,EAAE;AACrB,CAAC,CAAC;AAEF,MAAMC,WAAW,GAAIC,KAAU,IAAK;EAChC,IAAGA,KAAK,CAACC,QAAQ,EAAE;IACfC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,KAAK,CAACC,QAAQ,CAACG,IAAI,CAAC;EAChD,CAAC,MAAM;IACHF,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,KAAK,CAACK,OAAO,CAAC;EAC/C;AACJ,CAAC;AAED,OAAO,MAAMC,GAAG,GAAG;EACfC,QAAQ,EAAEA,CAAA,KAAMZ,IAAI,CAACa,GAAG,CAAC,UAAU,CAAC,CAACC,IAAI,CAACR,QAAQ,IAAIA,QAAQ,CAACG,IAAI,CAAC,CAACM,KAAK,CAACX,WAAW,CAAC;EAAE;EACzFY,cAAc,EAAEA,CAACC,EAAU,EAAER,IAAS,KAAKT,IAAI,CAACkB,IAAI,CAAC,YAAY,EAAE;IAACD,EAAE,EAAEA,EAAE;IAAER,IAAI,EAAEA;EAAI,CAAC,CAAC,CAACK,IAAI,CAACR,QAAQ,IAAIA,QAAQ,CAACG,IAAI,CAAC,CAACM,KAAK,CAACX,WAAW,CAAC;EAAE;EAC7Ie,aAAa,EAAEA,CAACF,EAAU,EAAER,IAAS,KAAKT,IAAI,CAACoB,GAAG,CAAC,cAAcH,EAAE,EAAE,EAAER,IAAI,CAAC,CAACK,IAAI,CAACR,QAAQ,IAAIA,QAAQ,CAACG,IAAI,CAAC,CAACM,KAAK,CAACX,WAAW,CAAC;EAAE;EACjIiB,UAAU,EAAGJ,EAAU,IAAKjB,IAAI,CAACsB,MAAM,CAAC,cAAcL,EAAE,EAAE,CAAC,CAACH,IAAI,CAACR,QAAQ,IAAIA,QAAQ,CAACG,IAAI,CAAC,CAACM,KAAK,CAACX,WAAW,CAAC,CAAE;AACpH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}