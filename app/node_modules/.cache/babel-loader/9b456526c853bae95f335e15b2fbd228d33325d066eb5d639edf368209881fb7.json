{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\fcdTodoList\\\\app\\\\src\\\\widgets\\\\ui\\\\Selected.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useTodos } from '../../shared/hooks/index';\nimport { api } from '../../shared/api/todos';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Selected = () => {\n  _s();\n  const {\n    toggleTodo\n  } = useTodos(); // Вызов хука\n  const [selectedTodos, setSelectedTodos] = useState([]); // Состояние для хранения выбранных задач\n\n  const fetchTodos = async () => {\n    try {\n      const response = await api.getSelected();\n    } catch {\n      console.error('Ошибка при получении списка todos');\n    }\n  };\n  useEffect(() => {\n    fetchTodos();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: response.map(todo => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Cart\",\n        style: {\n          background: \"green\",\n          color: \"white\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"CartInput\",\n          type: \"checkbox\",\n          checked: todo.completed,\n          onChange: () => toggleTodo(todo.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"CartTitle\",\n          children: todo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"CartButton\",\n          onClick: () => handleDelete(todo.id),\n          children: \"\\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Selected, \"2O0yVadb0PuMlSP2ESKHnCGkrvc=\", false, function () {\n  return [useTodos];\n});\n_c = Selected;\nvar _c;\n$RefreshReg$(_c, \"Selected\");","map":{"version":3,"names":["React","useEffect","useState","useTodos","api","jsxDEV","_jsxDEV","Selected","_s","toggleTodo","selectedTodos","setSelectedTodos","fetchTodos","response","getSelected","console","error","children","map","todo","className","style","background","color","type","checked","completed","onChange","id","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","handleDelete","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/fcdTodoList/app/src/widgets/ui/Selected.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useTodos } from '../../shared/hooks/index'\r\nimport { api } from '../../shared/api/todos';\r\nexport const Selected: React.FC = () => {\r\n\r\n    const { toggleTodo } = useTodos(); // Вызов хука\r\n    const [selectedTodos, setSelectedTodos] = useState<any[]>([]); // Состояние для хранения выбранных задач\r\n\r\n    const fetchTodos = async () => {\r\n        try {\r\n            const response = await api.getSelected()\r\n        } catch {\r\n            console.error('Ошибка при получении списка todos');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchTodos()\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            {response.map((todo) => {\r\n                return (\r\n                    <div\r\n                        className=\"Cart\"\r\n                        style={{ background: \"green\", color: \"white\" }}\r\n                        key={todo.id} // Используйте уникальный идентификатор todo.id в качестве ключа\r\n                    >\r\n                        <input\r\n                            className=\"CartInput\"\r\n                            type=\"checkbox\"\r\n                            checked={todo.completed}\r\n                            onChange={() => toggleTodo(todo.id)}\r\n                        />\r\n                        <h2 className=\"CartTitle\">{todo.title}</h2>\r\n                        <button className=\"CartButton\" onClick={() => handleDelete(todo.id)}>удалить</button>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,GAAG,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC7C,OAAO,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEpC,MAAM;IAAEC;EAAW,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EACnC,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAQ,EAAE,CAAC,CAAC,CAAC;;EAE/D,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMT,GAAG,CAACU,WAAW,CAAC,CAAC;IAC5C,CAAC,CAAC,MAAM;MACJC,OAAO,CAACC,KAAK,CAAC,mCAAmC,CAAC;IACtD;EACJ,CAAC;EAEDf,SAAS,CAAC,MAAM;IACZW,UAAU,CAAC,CAAC;EAChB,CAAC,CAAC;EAEF,oBACIN,OAAA;IAAAW,QAAA,EACKJ,QAAQ,CAACK,GAAG,CAAEC,IAAI,IAAK;MACpB,oBACIb,OAAA;QACIc,SAAS,EAAC,MAAM;QAChBC,KAAK,EAAE;UAAEC,UAAU,EAAE,OAAO;UAAEC,KAAK,EAAE;QAAQ,CAAE;QAAAN,QAAA,gBAG/CX,OAAA;UACIc,SAAS,EAAC,WAAW;UACrBI,IAAI,EAAC,UAAU;UACfC,OAAO,EAAEN,IAAI,CAACO,SAAU;UACxBC,QAAQ,EAAEA,CAAA,KAAMlB,UAAU,CAACU,IAAI,CAACS,EAAE;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC,eACF1B,OAAA;UAAIc,SAAS,EAAC,WAAW;UAAAH,QAAA,EAAEE,IAAI,CAACc;QAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC3C1B,OAAA;UAAQc,SAAS,EAAC,YAAY;UAACc,OAAO,EAAEA,CAAA,KAAMC,YAAY,CAAChB,IAAI,CAACS,EAAE,CAAE;UAAAX,QAAA,EAAC;QAAO;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAThFb,IAAI,CAACS,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUX,CAAC;IAEd,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACxB,EAAA,CAvCWD,QAAkB;EAAA,QAEJJ,QAAQ;AAAA;AAAAiC,EAAA,GAFtB7B,QAAkB;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}