{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\fcdTodoList\\\\app\\\\src\\\\widgets\\\\ui\\\\AddCart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useTodos } from \"../../shared/hooks/index\";\nimport { api } from \"../../shared/api/todos/index\"; // Импортируем api\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddCart = () => {\n  _s();\n  const {\n    todos,\n    addTodo\n  } = useTodos(); // Вызов хука\n  const [text, setText] = useState(\"\"); // Используем строку для состояния\n\n  useEffect(() => {\n    const fetchTodos = async () => {\n      try {\n        const response = await api.getTodos();\n        console.log(response);\n        if (Array.isArray(response)) {\n          response.forEach(todo => {\n            // Проверяем, существует ли задача уже в состоянии\n            if (!todos.some(existingTodo => existingTodo.id === todo.id)) {\n              addTodo(todo.id, todo.title, todo.completed);\n            }\n          });\n        }\n      } catch (error) {\n        console.error(\"Ошибка при получении задач:\", error);\n      }\n    };\n    fetchTodos();\n  }, [todos]); // Убираем todos из зависимостей\n\n  const handleAddTodo = async () => {\n    if (text.trim()) {\n      // Проверяем, что текст не пустой\n      const newTodo = {\n        id: Date.now(),\n        // Генерация уникального ID\n        title: text,\n        completed: false\n      };\n      await api.postCreateTodo(newTodo); // Отправляем новую задачу на сервер\n      addTodo(newTodo.id, newTodo.title, newTodo.completed); // Добавляем задачу в локальное состояние\n      setText(\"\"); // Очищаем поле ввода после добавления\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: text,\n      onChange: event => setText(event.target.value) // Устанавливаем текст\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTodo,\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(AddCart, \"cqZWjMxBLdHdHPRySsbQoQnC34M=\", false, function () {\n  return [useTodos];\n});\n_c = AddCart;\nvar _c;\n$RefreshReg$(_c, \"AddCart\");","map":{"version":3,"names":["React","useState","useEffect","useTodos","api","jsxDEV","_jsxDEV","AddCart","_s","todos","addTodo","text","setText","fetchTodos","response","getTodos","console","log","Array","isArray","forEach","todo","some","existingTodo","id","title","completed","error","handleAddTodo","trim","newTodo","Date","now","postCreateTodo","children","type","value","onChange","event","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/fcdTodoList/app/src/widgets/ui/AddCart.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useTodos } from \"../../shared/hooks/index\";\r\nimport { api } from \"../../shared/api/todos/index\"; // Импортируем api\r\n\r\nexport const AddCart: React.FC = () => {\r\n    const {todos,  addTodo } = useTodos(); // Вызов хука\r\n    const [text, setText] = useState(\"\"); // Используем строку для состояния\r\n\r\n    useEffect(() => {\r\n        const fetchTodos = async () => {\r\n            try {\r\n                const response = await api.getTodos();\r\n                console.log(response);\r\n\r\n                if (Array.isArray(response)) {\r\n                    response.forEach(todo => {\r\n                        // Проверяем, существует ли задача уже в состоянии\r\n                        if (!todos.some(existingTodo => existingTodo.id === todo.id)) {\r\n                            addTodo(todo.id, todo.title, todo.completed);\r\n                        }\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Ошибка при получении задач:\", error);\r\n            }\r\n        };\r\n\r\n        fetchTodos();\r\n    }, [todos]); // Убираем todos из зависимостей\r\n\r\n    const handleAddTodo = async () => {\r\n        if (text.trim()) { // Проверяем, что текст не пустой\r\n            const newTodo = {\r\n                id: Date.now(), // Генерация уникального ID\r\n                title: text,\r\n                completed: false,\r\n            };\r\n            await api.postCreateTodo(newTodo); // Отправляем новую задачу на сервер\r\n            addTodo(newTodo.id, newTodo.title, newTodo.completed); // Добавляем задачу в локальное состояние\r\n            setText(\"\"); // Очищаем поле ввода после добавления\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"text\"\r\n                value={text}\r\n                onChange={(event) => setText(event.target.value)} // Устанавливаем текст\r\n            />\r\n            <button onClick={handleAddTodo}>Добавить</button>\r\n        </div>\r\n    );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,GAAG,QAAQ,8BAA8B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,OAAO,MAAMC,OAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM;IAACC,KAAK;IAAGC;EAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EACvC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtCC,SAAS,CAAC,MAAM;IACZ,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMV,GAAG,CAACW,QAAQ,CAAC,CAAC;QACrCC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;QAErB,IAAII,KAAK,CAACC,OAAO,CAACL,QAAQ,CAAC,EAAE;UACzBA,QAAQ,CAACM,OAAO,CAACC,IAAI,IAAI;YACrB;YACA,IAAI,CAACZ,KAAK,CAACa,IAAI,CAACC,YAAY,IAAIA,YAAY,CAACC,EAAE,KAAKH,IAAI,CAACG,EAAE,CAAC,EAAE;cAC1Dd,OAAO,CAACW,IAAI,CAACG,EAAE,EAAEH,IAAI,CAACI,KAAK,EAAEJ,IAAI,CAACK,SAAS,CAAC;YAChD;UACJ,CAAC,CAAC;QACN;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZX,OAAO,CAACW,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACvD;IACJ,CAAC;IAEDd,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEb,MAAMmB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAIjB,IAAI,CAACkB,IAAI,CAAC,CAAC,EAAE;MAAE;MACf,MAAMC,OAAO,GAAG;QACZN,EAAE,EAAEO,IAAI,CAACC,GAAG,CAAC,CAAC;QAAE;QAChBP,KAAK,EAAEd,IAAI;QACXe,SAAS,EAAE;MACf,CAAC;MACD,MAAMtB,GAAG,CAAC6B,cAAc,CAACH,OAAO,CAAC,CAAC,CAAC;MACnCpB,OAAO,CAACoB,OAAO,CAACN,EAAE,EAAEM,OAAO,CAACL,KAAK,EAAEK,OAAO,CAACJ,SAAS,CAAC,CAAC,CAAC;MACvDd,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IACjB;EACJ,CAAC;EAED,oBACIN,OAAA;IAAA4B,QAAA,gBACI5B,OAAA;MACI6B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEzB,IAAK;MACZ0B,QAAQ,EAAGC,KAAK,IAAK1B,OAAO,CAAC0B,KAAK,CAACC,MAAM,CAACH,KAAK,CAAE,CAAC;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,eACFrC,OAAA;MAAQsC,OAAO,EAAEhB,aAAc;MAAAM,QAAA,EAAC;IAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEd,CAAC;AAACnC,EAAA,CAjDWD,OAAiB;EAAA,QACCJ,QAAQ;AAAA;AAAA0C,EAAA,GAD1BtC,OAAiB;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}