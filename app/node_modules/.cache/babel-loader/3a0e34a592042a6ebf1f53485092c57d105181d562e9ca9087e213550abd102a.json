{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\fcdTodoList\\\\app\\\\src\\\\widgets\\\\todoList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Api } from \"../shared/queriesClient\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TodoList = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [editingTodoId, setEditingTodoId] = useState(null);\n  const [editingTitle, setEditingTitle] = useState('');\n  const getTodos = async () => {\n    const response = await Api.getTodos();\n    const newTodos = response.map(data => ({\n      id: data.id,\n      title: data.title,\n      description: data.description,\n      completed: data.completed\n    }));\n    setTodos(newTodos);\n  };\n  useEffect(() => {\n    getTodos();\n  }, []);\n  const createTodo = async title => {\n    const response = await Api.createTodo(title);\n    if (response.id) {\n      const newTodo = {\n        id: response.id,\n        title,\n        description: '',\n        completed: false\n      };\n      setTodos([...todos, newTodo]);\n    }\n  };\n  const updateTodo = async (id, title) => {\n    const response = await Api.updateTodo(id, title);\n    if (response) {\n      const updatedTodos = todos.map(todo => todo.id === id ? {\n        ...todo,\n        title\n      } : todo);\n      setTodos(updatedTodos);\n      setEditingTodoId(null);\n      setEditingTitle('');\n    }\n  };\n  const completedTodo = async id => {\n    const response = await Api.completedTodo(id);\n    if (response) {\n      const updatedTodos = todos.map(todo => todo.id === id ? {\n        ...todo,\n        completed: !todo.completed\n      } : todo);\n      setTodos(updatedTodos);\n    }\n  };\n  const deleteTodo = async id => {\n    const response = await Api.deleteTodo(id);\n    if (response) {\n      setTodos(todos.filter(todo => todo.id !== id));\n    }\n  };\n  const handleEditClick = todo => {\n    setEditingTodoId(todo.id);\n    setEditingTitle(todo.title);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\",\n      onKeyDown: e => {\n        if (e.key === 'Enter') {\n          createTodo(e.target.value);\n          e.target.value = '';\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => createTodo(document.querySelector('input[type=\"text\"]').value),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: todo.completed,\n          onChange: () => completedTodo(todo.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), editingTodoId === todo.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editingTitle,\n            onChange: e => setEditingTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updateTodo(todo.id, editingTitle),\n            children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEditClick(todo),\n            children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: todo.completed ? 'Выполнено' : 'Невыполнено'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTodo(todo.id),\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoList, \"6lwKD10Fj61hJwj3bH/IjoM4pDY=\");\n_c = TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","Api","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoList","_s","todos","setTodos","editingTodoId","setEditingTodoId","editingTitle","setEditingTitle","getTodos","response","newTodos","map","data","id","title","description","completed","createTodo","newTodo","updateTodo","updatedTodos","todo","completedTodo","deleteTodo","filter","handleEditClick","children","type","placeholder","onKeyDown","e","key","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","document","querySelector","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/fcdTodoList/app/src/widgets/todoList.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Api } from \"../shared/queriesClient\";\r\n\r\ninterface Todo {\r\n    id: string;\r\n    title: string;\r\n    description: string;\r\n    completed: boolean;\r\n}\r\n\r\nexport const TodoList: React.FC = () => {\r\n    const [todos, setTodos] = useState<Todo[]>([]);\r\n    const [editingTodoId, setEditingTodoId] = useState<string | null>(null);\r\n    const [editingTitle, setEditingTitle] = useState<string>('');\r\n\r\n    const getTodos = async () => {\r\n        const response = await Api.getTodos();\r\n        const newTodos = response.map((data: Todo) => ({\r\n            id: data.id,\r\n            title: data.title,\r\n            description: data.description,\r\n            completed: data.completed,\r\n        }));\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getTodos();\r\n    }, []);\r\n\r\n    const createTodo = async (title: string) => {\r\n        const response = await Api.createTodo(title);\r\n        if (response.id) {\r\n            const newTodo = {\r\n                id: response.id,\r\n                title,\r\n                description: '',\r\n                completed: false,\r\n            };\r\n            setTodos([...todos, newTodo]);\r\n        }\r\n    };\r\n\r\n    const updateTodo = async (id: string, title: string) => {\r\n        const response = await Api.updateTodo(id, title);\r\n        if (response) {\r\n            const updatedTodos = todos.map(todo => todo.id === id ? { ...todo, title } : todo);\r\n            setTodos(updatedTodos);\r\n            setEditingTodoId(null);\r\n            setEditingTitle('');\r\n        }\r\n    };\r\n\r\n    const completedTodo = async (id: string) => {\r\n        const response = await Api.completedTodo(id);\r\n        if (response) {\r\n            const updatedTodos = todos.map(todo => todo.id === id ? { ...todo, completed: !todo.completed } : todo);\r\n            setTodos(updatedTodos);\r\n        }\r\n    };\r\n\r\n    const deleteTodo = async (id: string) => {\r\n        const response = await Api.deleteTodo(id);\r\n        if (response) {\r\n            setTodos(todos.filter(todo => todo.id !== id));\r\n        }\r\n    };\r\n\r\n    const handleEditClick = (todo: Todo) => {\r\n        setEditingTodoId(todo.id);\r\n        setEditingTitle(todo.title);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Введите задачу\"\r\n                onKeyDown={(e) => {\r\n                    if (e.key === 'Enter') {\r\n                        createTodo((e.target as HTMLInputElement).value);\r\n                        (e.target as HTMLInputElement).value = '';\r\n                    }\r\n                }}\r\n            />\r\n            <button onClick={() => createTodo((document.querySelector('input[type=\"text\"]') as HTMLInputElement).value)}>+</button>\r\n            <ul>\r\n                {todos.map(todo => (\r\n                    <li key={todo.id}>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={todo.completed}\r\n                            onChange={() => completedTodo(todo.id)}\r\n                        />\r\n                        {editingTodoId === todo.id ? (\r\n                            <>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={editingTitle}\r\n                                    onChange={(e) => setEditingTitle(e.target.value)}\r\n                                />\r\n                                <button onClick={() => updateTodo(todo.id, editingTitle)}>Сохранить</button>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <span>{todo.title}</span>\r\n                                <button onClick={() => handleEditClick(todo)}>Редактировать</button>\r\n                            </>\r\n                        )}\r\n                        <p>{todo.completed ? 'Выполнено' : 'Невыполнено'}</p>\r\n                        <button onClick={() => deleteTodo(todo.id)}>Удалить</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}