{"ast":null,"code":"import axios from 'axios';\nexport const API_URL = 'http://localhost:5000/api/todos/';\nexport const $api = axios.create({\n  baseURL: API_URL,\n  withCredentials: true\n});\nconst handleError = error => {\n  if (error.response) {\n    console.log(\"Ошибка: \", error.response.data);\n  } else {\n    console.log(\"Ошибка сети: \", error.message);\n  }\n};\nexport const api = {\n  getTodos: url => $api.get(url).then(response => response.data).catch(handleError),\n  postCreateTodo: (url, data) => $api.post(url, data).then(response => response.data).catch(handleError),\n  putUpdateTodo: (url, data) => $api.put(url, data).then(response => response.data).catch(handleError),\n  deleteTodo: (url, data) => $api.delete(url, data).then(response => response.data).catch(handleError)\n};","map":{"version":3,"names":["axios","API_URL","$api","create","baseURL","withCredentials","handleError","error","response","console","log","data","message","api","getTodos","url","get","then","catch","postCreateTodo","post","putUpdateTodo","put","deleteTodo","delete"],"sources":["C:/Users/user/Desktop/fcdTodoList/app/src/shared/api/todos/index.ts"],"sourcesContent":["import { error } from \"console\"\r\nimport axios from 'axios';\r\n\r\nexport const API_URL = 'http://localhost:5000/api/todos/';\r\n\r\nexport const $api = axios.create({\r\n    baseURL: API_URL,\r\n    withCredentials: true,\r\n})\r\n\r\nconst handleError = (error: any) => {\r\n    if(error.response) {\r\n        console.log(\"Ошибка: \", error.response.data)\r\n    } else {\r\n        console.log(\"Ошибка сети: \", error.message)\r\n    }\r\n}\r\n\r\nexport const api = {\r\n    getTodos: (url: any) => $api.get(url).then(response => response.data).catch(handleError),\r\n    postCreateTodo: (url: any, data: any) => $api.post(url, data).then(response => response.data).catch(handleError),\r\n    putUpdateTodo: (url: any, data: any) => $api.put(url, data).then(response => response.data).catch(handleError),\r\n    deleteTodo: (url: any, data: any) => $api.delete(url, data).then(response => response.data).catch(handleError)\r\n}"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,OAAO,GAAG,kCAAkC;AAEzD,OAAO,MAAMC,IAAI,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC7BC,OAAO,EAAEH,OAAO;EAChBI,eAAe,EAAE;AACrB,CAAC,CAAC;AAEF,MAAMC,WAAW,GAAIC,KAAU,IAAK;EAChC,IAAGA,KAAK,CAACC,QAAQ,EAAE;IACfC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,KAAK,CAACC,QAAQ,CAACG,IAAI,CAAC;EAChD,CAAC,MAAM;IACHF,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,KAAK,CAACK,OAAO,CAAC;EAC/C;AACJ,CAAC;AAED,OAAO,MAAMC,GAAG,GAAG;EACfC,QAAQ,EAAGC,GAAQ,IAAKb,IAAI,CAACc,GAAG,CAACD,GAAG,CAAC,CAACE,IAAI,CAACT,QAAQ,IAAIA,QAAQ,CAACG,IAAI,CAAC,CAACO,KAAK,CAACZ,WAAW,CAAC;EACxFa,cAAc,EAAEA,CAACJ,GAAQ,EAAEJ,IAAS,KAAKT,IAAI,CAACkB,IAAI,CAACL,GAAG,EAAEJ,IAAI,CAAC,CAACM,IAAI,CAACT,QAAQ,IAAIA,QAAQ,CAACG,IAAI,CAAC,CAACO,KAAK,CAACZ,WAAW,CAAC;EAChHe,aAAa,EAAEA,CAACN,GAAQ,EAAEJ,IAAS,KAAKT,IAAI,CAACoB,GAAG,CAACP,GAAG,EAAEJ,IAAI,CAAC,CAACM,IAAI,CAACT,QAAQ,IAAIA,QAAQ,CAACG,IAAI,CAAC,CAACO,KAAK,CAACZ,WAAW,CAAC;EAC9GiB,UAAU,EAAEA,CAACR,GAAQ,EAAEJ,IAAS,KAAKT,IAAI,CAACsB,MAAM,CAACT,GAAG,EAAEJ,IAAI,CAAC,CAACM,IAAI,CAACT,QAAQ,IAAIA,QAAQ,CAACG,IAAI,CAAC,CAACO,KAAK,CAACZ,WAAW;AACjH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}